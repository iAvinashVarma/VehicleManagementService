{
	"info": {
		"_postman_id": "c7a9ce5d-dc7c-4014-8f08-b259181a2155",
		"name": "VehicleManagementSystem",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Token",
			"item": [
				{
					"name": "GenerateTokenForAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bd58e2b-09d8-4c8e-8a5f-c5acd281a004",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201,202]);",
									"});",
									"",
									"pm.test(\"Check if token type is bearer\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.token_type).to.eql(\"bearer\");",
									"});",
									"",
									"pm.test(\"Access token is present\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.access_token).not.eq(null);",
									"    pm.environment.set(\"VMSToken\", jsonData.access_token);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"var schema = {",
									"    \"access_token\": \"\",",
									"    \"token_type\": \"\",",
									"    \"expires_in\": 0",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{VMSAdminUser}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{VMSAdminPassword}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{VMSGrantType}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{VMSUrl}}/token",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "GenerateTokenForUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0f73282-f1d5-4fbd-b48a-9e678209bf6e",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201,202]);",
									"});",
									"",
									"pm.test(\"Bearer token is present\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.token_type).to.eql(\"bearer\");",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"var schema = {",
									"    \"access_token\": \"\",",
									"    \"token_type\": \"\",",
									"    \"expires_in\": 0",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  let jsonData = pm.response.json();",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "user",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{VMSUrl}}/token",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Vehicle",
			"item": [
				{
					"name": "AddVehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fea115e5-ee2c-4c1d-9aed-50cadd08759a",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name is Created\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"VehicleId is present\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData._id).not.eq(null);",
									"    pm.globals.set(\"VehicleId\", jsonData._id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dd0e6328-d087-47ac-9b3d-fa34667a6095",
								"exec": [
									"let vehicleName = \"AudiQ7\";",
									"let registrationNumber = \"NZ007\";",
									"let newVehicleName = \"AudiQ9\";",
									"let newRegistrationNumber = \"NZ009\";",
									"",
									"pm.globals.set(\"VehicleName\", vehicleName);",
									"pm.globals.set(\"RegistrationNumber\", registrationNumber);",
									"pm.globals.set(\"NewVehicleName\", newVehicleName);",
									"pm.globals.set(\"NewRegistrationNumber\", newRegistrationNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{VehicleName}}\",\r\n  \"registrationNumber\": \"{{RegistrationNumber}}\"\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle"
							]
						},
						"description": "Add Vehicle"
					},
					"response": []
				},
				{
					"name": "GetVehicles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c91a37d4-33b0-4b28-a41b-b81ebf5e59df",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name is OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Contains atleast one vehicle record\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Match VehicleName\", function () {",
									"    let jsonData = pm.response.json();",
									"    let vehicleNames = jsonData.map(v => v.name);",
									"    let vehicleName = pm.globals.get(\"VehicleName\");",
									"    pm.expect(vehicleNames.includes(vehicleName)).to.be.true;",
									"});",
									"",
									"pm.test(\"Match RegistrationNumber\", function () {",
									"    let jsonData = pm.response.json();",
									"    let registrationNumbers = jsonData.map(v => v.registrationNumber);",
									"    let registrationNumber = pm.globals.get(\"RegistrationNumber\");",
									"    pm.expect(registrationNumbers.includes(registrationNumber)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle"
							]
						},
						"description": "Get Vehicles"
					},
					"response": []
				},
				{
					"name": "GetVehicleById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a327ed5b-123b-4b16-ab9c-b216f23b5b0d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name is OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Match VehicleId\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData._id).not.eq(null);",
									"    pm.globals.set(\"VehicleId\", jsonData._id);",
									"});",
									"",
									"pm.test(\"Match VehicleName\", function () {",
									"    let jsonData = pm.response.json();",
									"    let vehicleName = pm.globals.get(\"VehicleName\");",
									"    pm.expect(jsonData.name).to.eql(vehicleName);",
									"});",
									"",
									"pm.test(\"Match RegistrationNumber\", function () {",
									"    let jsonData = pm.response.json();",
									"    let registrationNumber = pm.globals.get(\"RegistrationNumber\");",
									"    pm.expect(jsonData.registrationNumber).to.eql(registrationNumber);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle/{{VehicleId}}",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle",
								"{{VehicleId}}"
							]
						},
						"description": "GetVehicleById"
					},
					"response": []
				},
				{
					"name": "GetVehiclesByName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d919838-c207-4e4e-abbb-d5e40a80428a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name is OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Match VehicleId\", function () {",
									"    let jsonData = pm.response.json();",
									"    let vehicleIds = jsonData.map(v => v._id);",
									"    let vehicleId = pm.globals.get(\"VehicleId\");",
									"    pm.expect(vehicleIds.includes(vehicleId)).to.be.true;",
									"});",
									"",
									"pm.test(\"Match VehicleName\", function () {",
									"    let jsonData = pm.response.json();",
									"    let vehicleNames = jsonData.map(v => v.name);",
									"    let vehicleName = pm.globals.get(\"VehicleName\");",
									"    pm.expect(vehicleNames.includes(vehicleName)).to.be.true;",
									"});",
									"",
									"pm.test(\"Match RegistrationNumber\", function () {",
									"    let jsonData = pm.response.json();",
									"    let registrationNumbers = jsonData.map(v => v.registrationNumber);",
									"    let registrationNumber = pm.globals.get(\"RegistrationNumber\");",
									"    pm.expect(registrationNumbers.includes(registrationNumber)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle?name={{VehicleName}}",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle"
							],
							"query": [
								{
									"key": "name",
									"value": "{{VehicleName}}"
								}
							]
						},
						"description": "Get Vehicles By Name"
					},
					"response": []
				},
				{
					"name": "GetVehicleByRegistrationNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2971371d-c0e5-4e23-a945-ebe37e8902dc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name is OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Match VehicleId\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData._id).not.eq(null);",
									"    pm.globals.set(\"VehicleId\", jsonData._id);",
									"});",
									"",
									"pm.test(\"Match VehicleName\", function () {",
									"    let jsonData = pm.response.json();",
									"    let vehicleName = pm.globals.get(\"VehicleName\");",
									"    pm.expect(jsonData.name).to.eql(vehicleName);",
									"});",
									"",
									"pm.test(\"Match RegistrationNumber\", function () {",
									"    let jsonData = pm.response.json();",
									"    let registrationNumber = pm.globals.get(\"RegistrationNumber\");",
									"    pm.expect(jsonData.registrationNumber).to.eql(registrationNumber);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle?registrationNumber={{RegistrationNumber}}",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle"
							],
							"query": [
								{
									"key": "registrationNumber",
									"value": "{{RegistrationNumber}}"
								}
							]
						},
						"description": "GetVehicleByRegistrationNumber"
					},
					"response": []
				},
				{
					"name": "EditVehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee35a287-5b5b-4663-adea-685b02f97c90",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name is Created\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Check if update is successful\", function () {",
									"    let status = pm.response.text();",
									"    pm.expect(status).to.eq(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{NewVehicleName}}\",\r\n  \"registrationNumber\": \"{{NewRegistrationNumber}}\"\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle/{{VehicleId}}",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle",
								"{{VehicleId}}"
							]
						},
						"description": "Edit Vehicle"
					},
					"response": []
				},
				{
					"name": "GetUpdatedVehicleById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a327ed5b-123b-4b16-ab9c-b216f23b5b0d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name is OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Match VehicleId\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData._id).not.eq(null);",
									"    pm.globals.set(\"VehicleId\", jsonData._id);",
									"});",
									"",
									"pm.test(\"Match NewVehicleName\", function () {",
									"    let jsonData = pm.response.json();",
									"    let vehicleName = pm.globals.get(\"NewVehicleName\");",
									"    pm.expect(jsonData.name).to.eql(vehicleName);",
									"});",
									"",
									"pm.test(\"Match NewRegistrationNumber\", function () {",
									"    let jsonData = pm.response.json();",
									"    let registrationNumber = pm.globals.get(\"NewRegistrationNumber\");",
									"    pm.expect(jsonData.registrationNumber).to.eql(registrationNumber);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle/{{VehicleId}}",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle",
								"{{VehicleId}}"
							]
						},
						"description": "GetVehicleById"
					},
					"response": []
				},
				{
					"name": "RemoveVehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8033c4f9-7f6d-4c3d-8f4d-561bc5f4429e",
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test(\"Status code name is Accepted\", function () {",
									"    pm.response.to.have.status(\"Accepted\");",
									"});",
									"",
									"pm.test(\"Content-Type is of application json\", function () {",
									"    let contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(contentType.startsWith(\"application/json\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Check if update is successful\", function () {",
									"    let status = pm.response.text();",
									"    pm.expect(status).to.eq(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{VMSUrl}}/api/Vehicle/{{VehicleId}}",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Vehicle",
								"{{VehicleId}}"
							]
						},
						"description": "Remove Vehicle"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8c51b822-685d-41f6-ad9a-ed23b7704d74",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "db8f1d82-3626-4cc9-935a-d992cc1bfdb6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Driver",
			"item": [
				{
					"name": "AddDriver",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"BruceLee\",\r\n  \"age\": 31,\r\n  \"phone\": \"22123458\",\r\n  \"identity\": \"NZ12346\"\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/Driver",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Driver"
							]
						},
						"description": "Add Driver"
					},
					"response": []
				},
				{
					"name": "GetDrivers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Driver",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Driver"
							]
						},
						"description": "GetDrivers"
					},
					"response": []
				},
				{
					"name": "GetDriverById",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Driver/5e92a8eed7745c38407e96af",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Driver",
								"5e92a8eed7745c38407e96af"
							]
						},
						"description": "GetDriverById"
					},
					"response": []
				},
				{
					"name": "GetDriversByName",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Driver?name=BruceLee",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Driver"
							],
							"query": [
								{
									"key": "name",
									"value": "BruceLee"
								}
							]
						},
						"description": "GetDriversByName"
					},
					"response": []
				},
				{
					"name": "GetDriverByIdentity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/Driver?identity=NZ12346",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Driver"
							],
							"query": [
								{
									"key": "identity",
									"value": "NZ12346"
								}
							]
						},
						"description": "GetDriverByIdentity"
					},
					"response": []
				},
				{
					"name": "UpdateDriver",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Audi Q7\",\r\n  \"registrationNumber\": \"NZ009\"\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/Driver/5e8feba6d7745c2e845ca1b2",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Driver",
								"5e8feba6d7745c2e845ca1b2"
							]
						},
						"description": "Update Driver"
					},
					"response": []
				},
				{
					"name": "RemoveDriver",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{VMSUrl}}/api/Driver/5e8feba6d7745c2e845ca1b2",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"Driver",
								"5e8feba6d7745c2e845ca1b2"
							]
						},
						"description": "Remove Driver"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "VehicleMonitor",
			"item": [
				{
					"name": "AddVehicleMonitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vehicleId\": \"5e91bfa5d7745c42cc7415cf\",\r\n  \"driverId\": \"5e91bfedd7745c42cc7415d0\",\r\n  \"location\": {\r\n    \"latitude\": -36.8667,\r\n    \"longitude\": 174.7667\r\n  },\r\n  \"pressure\": {\r\n    \"pressurePsi\": 30\r\n  },\r\n  \"temperature\": {\r\n    \"temperatureCelsius\": 19\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/VehicleMonitor",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"VehicleMonitor"
							]
						},
						"description": "AddVehicleMonitor"
					},
					"response": []
				},
				{
					"name": "GetVehicleMonitor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/VehicleMonitor",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"VehicleMonitor"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVehicleMonitorById",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{VMSUrl}}/api/VehicleMonitor/5e91c02ed7745c42cc7415d1",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"VehicleMonitor",
								"5e91c02ed7745c42cc7415d1"
							]
						},
						"description": "GetVehicleMonitorById"
					},
					"response": []
				},
				{
					"name": "UpdateVehicleMonitor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vehicleId\": \"5e90152fd7745c0fa4834243\",\r\n  \"driverId\": \"5e9013a6d7745c0fa4834241\",\r\n  \"location\": {\r\n    \"latitude\": -36.8667,\r\n    \"longitude\": 174.7667\r\n  },\r\n  \"pressure\": {\r\n    \"pressurePsi\": 32\r\n  },\r\n  \"temperature\": {\r\n    \"temperatureCelsius\": 20\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/VehicleMonitor/5e901e2dd7745c345c9fe17d",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"VehicleMonitor",
								"5e901e2dd7745c345c9fe17d"
							]
						}
					},
					"response": []
				},
				{
					"name": "RemoveVehicleMonitor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{VMSUrl}}/api/VehicleMonitor/5e901e2dd7745c345c9fe17d",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"VehicleMonitor",
								"5e901e2dd7745c345c9fe17d"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DriverMessenger",
			"item": [
				{
					"name": "AddDriverMessenger",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vehicleId\": \"5e91bfa5d7745c42cc7415cf\",\r\n  \"driverId\": \"5e91bfedd7745c42cc7415d0\",\r\n  \"message\": \"On the way to deliver the package.\"\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/DriverMessenger",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"DriverMessenger"
							]
						},
						"description": "AddDriverMessenger"
					},
					"response": []
				},
				{
					"name": "GetDriverMessenger",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{VMSUrl}}/api/DriverMessenger",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"DriverMessenger"
							]
						},
						"description": "GetDriverMessenger"
					},
					"response": []
				},
				{
					"name": "GetDriverMessengerById",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{VMSUrl}}/api/DriverMessenger/5e91c033d7745c42cc7415d2",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"DriverMessenger",
								"5e91c033d7745c42cc7415d2"
							]
						},
						"description": "GetDriverMessengerById"
					},
					"response": []
				},
				{
					"name": "UpdateDriverMessenger",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vehicleId\": \"5e90152fd7745c0fa4834243\",\r\n  \"driverId\": \"5e9013a6d7745c0fa4834241\",\r\n  \"message\": \"Delivered the package.\"\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/DriverMessenger/5e9056efd7745c264014f999",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"DriverMessenger",
								"5e9056efd7745c264014f999"
							]
						},
						"description": "UpdateDriverMessenger"
					},
					"response": []
				},
				{
					"name": "RemoveDriverMessenger",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"vehicleId\": \"5e90152fd7745c0fa4834243\",\r\n  \"driverId\": \"5e9013a6d7745c0fa4834241\",\r\n  \"message\": \"Delivered the package.\",\r\n  \"updatedDate\": \"2020-04-10T19:04:32.9698878+12:00\",\r\n  \"modifiedDate\": \"2020-04-10T19:04:32.9698878+12:00\"\r\n}"
						},
						"url": {
							"raw": "{{VMSUrl}}/api/DriverMessenger/5e9056efd7745c264014f999",
							"host": [
								"{{VMSUrl}}"
							],
							"path": [
								"api",
								"DriverMessenger",
								"5e9056efd7745c264014f999"
							]
						},
						"description": "RemoveDriverMessenger"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{VMSToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "56f7da77-e011-4388-9daf-4cc68b746d4b",
				"type": "text/javascript",
				"exec": [
					"pm.variables.set(\"VMSAdminUser\", \"admin\");",
					"pm.variables.set(\"VMSAdminPassword\", \"admin\");",
					"pm.variables.set(\"VMSGrantType\", \"password\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "78b8d4ff-e694-41d7-816e-7e1c74c71843",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "04a3e904-5e09-4bcd-a91a-1f1cd90b5370",
			"key": "VMSToken",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"id": "92cd4f83-5e62-401e-969d-81744e7e9409",
			"key": "VMSAdminUser",
			"value": "",
			"type": "string"
		},
		{
			"id": "0f83ffbf-b87c-478c-be06-f449b015060a",
			"key": "VMSAdminPassword",
			"value": "",
			"type": "string"
		},
		{
			"id": "4c3cfcf3-0798-4b95-969b-20749480c029",
			"key": "VMSGrantType",
			"value": "",
			"type": "string"
		},
		{
			"id": "78cc5eac-3152-4e0f-81f4-7ef0f3b4cc52",
			"key": "VehicleId",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"id": "7a611491-aaa7-4328-a8cc-b8d769655932",
			"key": "DriverId",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"id": "c8426144-9532-49c1-9f74-ced0c96f1a95",
			"key": "VehicleMonitorId",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"id": "afbe0529-a619-4a04-8385-023d52881a8f",
			"key": "DriverMessengerId",
			"value": "",
			"type": "string",
			"disabled": true
		}
	],
	"protocolProfileBehavior": {}
}